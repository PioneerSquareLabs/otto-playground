// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    github_id     Int       @unique
    avatar_url    String?
    created_at    DateTime  @default(now())
    updated_at    DateTime  @default(now())
    projects      Project[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Project {
  id              Int           @id @default(autoincrement())
  name            String
  description     String?
  user_id         String
  language        String
  framework       String
  database        String
  hosting         String
  authentication  String
  css_styling     String
  created_at      DateTime      @default(now())
  updated_at      DateTime      @default(now())
  user            User          @relation(fields: [user_id], references: [id])
  project_files   ProjectFile[]
  data_tables     DataTable[]
  tasks           Task[]
}

model ProjectFile {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  project_id  Int
  file_path   String
  figma_url   String?
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
  project     Project  @relation(fields: [project_id], references: [id])
}

model DataTable {
  id         Int         @id @default(autoincrement())
  name       String
  project_id Int
  created_at DateTime    @default(now())
  updated_at DateTime    @default(now())
  project    Project     @relation(fields: [project_id], references: [id])
  columns    DataColumn[]
}

model DataColumn {
  id           Int       @id @default(autoincrement())
  name         String
  data_type    String
  description  String?
  data_table_id Int
  created_at   DateTime  @default(now())
  updated_at   DateTime  @default(now())
  data_table   DataTable @relation(fields: [data_table_id], references: [id])
}

model Task {
  id             Int      @id @default(autoincrement())
  title          String
  description    String?
  project_id     Int
  github_issue_id Int?
  status         String   @default("pending")
  created_at     DateTime @default(now())
  updated_at     DateTime @default(now())
  project        Project  @relation(fields: [project_id], references: [id])
}